{"version":3,"sources":["components/ContactForm/ContactForm.jsx","components/ContactList/ContactList.jsx","components/Filter/Filter.jsx","components/Section/Section.jsx","components/Header/Header.jsx","App.js","index.js"],"names":["ContactForm","state","name","number","handleChange","e","currentTarget","value","setState","handleSubmit","preventDefault","props","onSubmit","reset","this","setNewValue","setContact","nameInputId","shortid","generate","numberInputId","type","pattern","title","required","id","onChange","htmlFor","Component","ContactList","contacts","onDeleteContact","map","onClick","Filter","Section","children","Header","App","filter","addContact","contact","some","item","alert","deleteContact","prevState","changeFilter","getFilterContacts","normalizedFilter","toLowerCase","includes","changeFilterValue","visibleContact","className","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uTAGMA,E,4MACJC,MAAQ,CACNC,KAAM,GACNC,OAAQ,I,EAGVC,aAAe,SAACC,GACd,MAAwBA,EAAEC,cAAlBJ,EAAR,EAAQA,KAAMK,EAAd,EAAcA,MACd,EAAKC,SAAL,eACGN,EAAOK,K,EAIZE,aAAe,SAACJ,GACdA,EAAEK,iBACF,MAAyB,EAAKT,MAAtBC,EAAR,EAAQA,KAAMC,EAAd,EAAcA,OACd,EAAKQ,MAAMC,SAASV,EAAMC,GAC1B,EAAKU,S,EAGPA,MAAQ,WACN,EAAKL,SAAS,CAAEN,KAAM,GAAIC,OAAQ,M,4CAGpC,WACE,MAAyBW,KAAKb,MAAtBC,EAAR,EAAQA,KAAMC,EAAd,EAAcA,OACRY,EAAcD,KAAKV,aACnBY,EAAaF,KAAKL,aAClBQ,EAAcC,IAAQC,WACtBC,EAAgBF,IAAQC,WAE9B,OACE,uBAAMP,SAAUI,EAAhB,UACE,gCACE,uBACEK,KAAK,OACLnB,KAAK,OACLoB,QAAQ,yHACRC,MAAM,yIACNC,UAAQ,EACRjB,MAAOL,EACPuB,GAAIR,EACJS,SAAUX,IAEZ,uBAAOY,QAASV,EAAhB,qBAGF,gCACE,uBACEI,KAAK,MACLnB,KAAK,SACLoB,QAAQ,yFACRC,MAAM,+FACNC,UAAQ,EACRjB,MAAOJ,EACPsB,GAAIL,EACJM,SAAUX,IAEZ,uBAAOY,QAASP,EAAhB,uBAEF,wBAAQC,KAAK,SAAb,gC,GA5DkBO,aAkEX5B,IClDA6B,MAnBf,YAAqD,IAA9BC,EAA6B,EAA7BA,SAAUC,EAAmB,EAAnBA,gBAC/B,OACE,6BACGD,EAASE,KAAI,gBAAG9B,EAAH,EAAGA,KAAMC,EAAT,EAASA,OAAQsB,EAAjB,EAAiBA,GAAjB,OACZ,+BACE,uCAAUvB,KACV,yCAAYC,KAIZ,wBAAQkB,KAAK,SAASI,GAAIA,EAAIQ,QAAS,kBAAMF,EAAgBN,IAA7D,sBANOA,SCYFS,MAdf,YAAsC,IAApB3B,EAAmB,EAAnBA,MAAOmB,EAAY,EAAZA,SACvB,OACE,wBAAOC,QAAQ,GAAf,oCAEE,uBAAON,KAAK,OAAOd,MAAOA,EAAOmB,SAAUA,QCUlCS,MAdf,YAAuC,IAApBZ,EAAmB,EAAnBA,MAAOa,EAAY,EAAZA,SACxB,OACE,oCACE,6BAAKb,IACL,8BAAMa,QCYGC,MAhBf,YAAsC,IAApBd,EAAmB,EAAnBA,MAAOa,EAAY,EAAZA,SACvB,OACE,iCACE,gCACE,6BAAKb,IACJa,QCEHE,E,4MACJrC,MAAQ,CACN6B,SAAU,CACR,CAAEL,GAAI,OAAQvB,KAAM,gBAAiBC,OAAQ,aAC7C,CAAEsB,GAAI,OAAQvB,KAAM,iBAAkBC,OAAQ,aAC9C,CAAEsB,GAAI,OAAQvB,KAAM,gBAAiBC,OAAQ,aAC7C,CAAEsB,GAAI,OAAQvB,KAAM,iBAAkBC,OAAQ,cAEhDoC,OAAQ,I,EAGVC,WAAa,SAACtC,EAAMC,GAClB,IAAMsC,EAAU,CACdhB,GAAIP,IAAQC,WACZjB,OACAC,UAEmB,EAAKF,MAAM6B,SAASY,MAAK,SAACC,GAAD,OAAUA,EAAKzC,OAASA,KAKlE0C,MAAM,GAAD,OAAI1C,EAAJ,+BADL,EAAKM,UAAS,gBAAGsB,EAAH,EAAGA,SAAH,MAAmB,CAAEA,SAAS,CAAEW,GAAH,mBAAeX,S,EAIhEe,cAAgB,SAACpB,GACf,EAAKjB,UAAS,SAACsC,GAAD,MAAgB,CAC5BhB,SAAUgB,EAAUhB,SAASS,QAAO,SAACE,GAAD,OAAaA,EAAQhB,KAAOA,U,EAIpEsB,aAAe,SAAC1C,GACd,EAAKG,SAAS,CACZ+B,OAAQlC,EAAEC,cAAcC,S,EAI5ByC,kBAAoB,WAClB,MAA6B,EAAK/C,MAA1B6B,EAAR,EAAQA,SACFmB,EADN,EAAkBV,OACcW,cAEhC,OAAOpB,EAASS,QAAO,SAACE,GAAD,OACrBA,EAAQvC,KAAKgD,cAAcC,SAASF,O,4CAIxC,WACE,IAAMT,EAAa1B,KAAK0B,WAClBK,EAAgB/B,KAAK+B,cACnBN,EAAWzB,KAAKb,MAAhBsC,OACFa,EAAoBtC,KAAKiC,aACzBM,EAAiBvC,KAAKkC,oBAE5B,OACE,sBAAKM,UAAU,MAAf,UACE,cAAC,EAAD,CAAQ/B,MAAO,YAAf,SACE,cAAC,EAAD,CAAQhB,MAAOgC,EAAQb,SAAU0B,MAEnC,eAAC,EAAD,CAAS7B,MAAO,WAAhB,UACE,cAAC,EAAD,CAAaX,SAAU4B,IACvB,cAAC,EAAD,CACEV,SAAUuB,EACVtB,gBAAiBc,c,GA9DXjB,aAsEHU,IC1EfiB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.cb40d228.chunk.js","sourcesContent":["import { Component } from \"react\";\r\nimport shortid from \"shortid\";\r\n\r\nclass ContactForm extends Component {\r\n  state = {\r\n    name: \"\",\r\n    number: \"\",\r\n  };\r\n\r\n  handleChange = (e) => {\r\n    const { name, value } = e.currentTarget;\r\n    this.setState({\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const { name, number } = this.state;\r\n    this.props.onSubmit(name, number);\r\n    this.reset();\r\n  };\r\n\r\n  reset = () => {\r\n    this.setState({ name: \"\", number: \"\" });\r\n  };\r\n\r\n  render() {\r\n    const { name, number } = this.state;\r\n    const setNewValue = this.handleChange;\r\n    const setContact = this.handleSubmit;\r\n    const nameInputId = shortid.generate();\r\n    const numberInputId = shortid.generate();\r\n\r\n    return (\r\n      <form onSubmit={setContact}>\r\n        <div>\r\n          <input\r\n            type=\"text\"\r\n            name=\"name\"\r\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\r\n            required\r\n            value={name}\r\n            id={nameInputId}\r\n            onChange={setNewValue}\r\n          />\r\n          <label htmlFor={nameInputId}>Name</label>\r\n        </div>\r\n\r\n        <div>\r\n          <input\r\n            type=\"tel\"\r\n            name=\"number\"\r\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\r\n            required\r\n            value={number}\r\n            id={numberInputId}\r\n            onChange={setNewValue}\r\n          />\r\n          <label htmlFor={numberInputId}>Number</label>\r\n        </div>\r\n        <button type=\"submit\">Add contact</button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ContactForm;\r\n","function ContactList({ contacts, onDeleteContact }) {\r\n  return (\r\n    <ul>\r\n      {contacts.map(({ name, number, id }) => (\r\n        <li key={id}>\r\n          <p>Name: {name}</p>\r\n          <p>Number: {number}</p>\r\n          {/* <button type=\"button\" onClick={() => deleteContact(contact.id)}>\r\n            Delete\r\n          </button> */}\r\n          <button type=\"button\" id={id} onClick={() => onDeleteContact(id)}>\r\n            Delete\r\n          </button>\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n}\r\n\r\nexport default ContactList;\r\n","import PropTypes from \"prop-types\";\r\n\r\nfunction Filter({ value, onChange }) {\r\n  return (\r\n    <label htmlFor=\"\">\r\n      Filter contacts by name\r\n      <input type=\"text\" value={value} onChange={onChange} />\r\n    </label>\r\n  );\r\n}\r\n\r\nFilter.propTypes = {\r\n  value: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Filter;\r\n","import PropTypes from \"prop-types\";\r\n\r\nfunction Section({ title, children }) {\r\n  return (\r\n    <section>\r\n      <h2>{title}</h2>\r\n      <div>{children}</div>\r\n    </section>\r\n  );\r\n}\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  children: PropTypes.node,\r\n};\r\n\r\nexport default Section;\r\n","import PropTypes from \"prop-types\";\r\n\r\nfunction Header({ title, children }) {\r\n  return (\r\n    <header>\r\n      <div>\r\n        <h1>{title}</h1>\r\n        {children}\r\n      </div>\r\n    </header>\r\n  );\r\n}\r\n\r\nHeader.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  children: PropTypes.node,\r\n};\r\n\r\nexport default Header;\r\n","import \"./App.css\";\nimport shortid from \"shortid\";\nimport { Component } from \"react\";\nimport ContactForm from \"./components/ContactForm\";\nimport ContactList from \"./components/ContactList\";\nimport Filter from \"./components/Filter\";\nimport Section from \"./components/Section/Section\";\nimport Header from \"./components/Header/Header\";\n\nclass App extends Component {\n  state = {\n    contacts: [\n      { id: \"id-1\", name: \"Rosie Simpson\", number: \"459-12-56\" },\n      { id: \"id-2\", name: \"Hermione Kline\", number: \"443-89-12\" },\n      { id: \"id-3\", name: \"Eden Clements\", number: \"645-17-79\" },\n      { id: \"id-4\", name: \"Annie Copeland\", number: \"227-91-26\" },\n    ],\n    filter: \"\",\n  };\n\n  addContact = (name, number) => {\n    const contact = {\n      id: shortid.generate(),\n      name,\n      number,\n    };\n    const existContact = this.state.contacts.some((item) => item.name === name);\n    // console.log(existContact);\n\n    !existContact\n      ? this.setState(({ contacts }) => ({ contacts: [contact, ...contacts] }))\n      : alert(`${name} is already in the contact`);\n  };\n\n  deleteContact = (id) => {\n    this.setState((prevState) => ({\n      contacts: prevState.contacts.filter((contact) => contact.id !== id),\n    }));\n  };\n\n  changeFilter = (e) => {\n    this.setState({\n      filter: e.currentTarget.value,\n    });\n  };\n\n  getFilterContacts = () => {\n    const { contacts, filter } = this.state;\n    const normalizedFilter = filter.toLowerCase();\n\n    return contacts.filter((contact) =>\n      contact.name.toLowerCase().includes(normalizedFilter)\n    );\n  };\n\n  render() {\n    const addContact = this.addContact;\n    const deleteContact = this.deleteContact;\n    const { filter } = this.state;\n    const changeFilterValue = this.changeFilter;\n    const visibleContact = this.getFilterContacts();\n\n    return (\n      <div className=\"App\">\n        <Header title={\"PhoneBook\"}>\n          <Filter value={filter} onChange={changeFilterValue} />\n        </Header>\n        <Section title={\"Contacts\"}>\n          <ContactForm onSubmit={addContact} />\n          <ContactList\n            contacts={visibleContact}\n            onDeleteContact={deleteContact}\n          />\n        </Section>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}